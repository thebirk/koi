// fn regex(pattern);      // Returns a table with some user data, like the original pattern and some userdata with the compiled regex
// regex.match = fn(input) // Returns an array containing an array for each match containing the captures
fn append(arr, element) {
	assert(type(arr) == "array");
	arr[len(arr)] = element;
}

fn main(args) {
	r := regex("#([0-9])+ @ ([0-9])+,([0-9])+: ([0-9])+x([0-9])+");
	input := "#1 @ 1,3: 4x4 #2 @ 3,1: 4x4 #3 @ 5,5: 2x2";
	// results := r:match(input); // match returns just the matched strings
	results := r:capture(input);

	entries := [];
	for e, i in result {
		entry := {
			id = tonumber(e[0]),
			x = tonumber(e[1]), y = tonumber(e[2]),
			w = tonumber(e[3]), h = tonumber(e[4]),
		};
		entries[i] = entry;
	}
}