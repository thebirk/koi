//import "tests/point.koi"

fn add(a, b) do return a + b;

fn Point(x, y) do return {x = x, y = y, add = Point_Add};
fn Point_Add(self, x, y) {
	self.x += x;
	self.y += y;
}

fn factorial(n) {
	if n == 1 do return n;
	else do return n * factorial(n-1);
}

fn fib(n) {
	if n <= 2 do return 1;
	else do return fib(n-1) + fib(n-2);
}

fn recurse(n) {
	if n == 0 do return;
	else do recurse(n-1);
}

// fn for_loop(n) {
// 	{
// 		it := 0;
// 		for {
// 			it += 1;
// 			if it == n do break;
// 		}
// 	}

// 	for i in range(0, n) {
		
// 	}
// }

// arg is 111
fn main(arg) {
	//return fib(10);
	//return factorial(5);
	recurse(100);

	var b = 444/4;
	if true {
		b *= 2;
	} else {
		b *= 3;
	}

	var p = Point(2, 4);
	p.add(p, 1, -3);

	var a = add(120+p.x, 320+p.y);
	{
		var π = 3.14159265358979323846;
		return π;
	}

	var table = {test = 888/4/2};
	z := {a=111}.a;

	return a+b+arg + table.test + z;
}